
==================== FINAL INTERFACE ====================
2017-11-22 21:36:29.105448 UTC

interface chatServer-0.1.0.0-CKiPEewL8xJAxGM0oTBXAz:DataTypes 8002
  interface hash: ca6dbb841197dc0af7cb6fe64d7c0301
  ABI hash: 1936aa482543c469a5c8956c143a1a85
  export-list hash: f577dfb35fb96762881efe3a0829fb53
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  DataTypes.addToRoom
  DataTypes.disconnectClient
  DataTypes.handleMsgTypes
  DataTypes.newChatRoom
  DataTypes.newClient
  DataTypes.removeClient
  DataTypes.sendMessage
  DataTypes.ChatList
  DataTypes.ChatRoom{DataTypes.ChatRoom clients roomRef roomStr}
  DataTypes.Client{DataTypes.Client channel clientHandle clientId clientName}
  DataTypes.Message{DataTypes.Chat DataTypes.Error}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol*
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve*
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Compose base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.IO.Handle.Text b65719f3b262b071ab1aabeb72fc9d8b
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 0fd5c8559af8bc4b6f38b9cf9ba5a467
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable 0e86f32bd46d4c618b1e312455011c77
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Class bc4f00f60e55accb5753c8e0ce3cde5f
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TChan 791cd378857d88a7ed4d753121139423
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TVar 8271fdeaf6f41f205dbe31243cf91390
9791aecb7a8ab6f0879fe8068c9d5863
  $sdelete_$sgo10 ::
    GHC.Types.Int
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Map.Base.Map GHC.Types.Int a1) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 DataTypes.$w$sgo10 @ a1 ww1 w1 }) -}
90619999b342a238f4d3ecd8722d0feb
  $tc'Chat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5177321923197924517##
                   2051461661211625273##
                   DataTypes.$trModule
                   DataTypes.$tc'Chat1) -}
cfef14c5eccaea771c3ac13589feb881
  $tc'Chat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chat"#) -}
9dd76d3be51e59feaaaeac0b3bc808ff
  $tc'ChatRoom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11462234702113524388##
                   5571644294747371062##
                   DataTypes.$trModule
                   DataTypes.$tc'ChatRoom1) -}
0b31b4485ffa6ec5622b538ac76dc568
  $tc'ChatRoom1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ChatRoom"#) -}
dc8f6ec2b95da5feea1b676464214662
  $tc'Client :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5596469750002157995##
                   8648190992460085816##
                   DataTypes.$trModule
                   DataTypes.$tc'Client1) -}
134f5a08d62b281969112c354bd63226
  $tc'Client1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Client"#) -}
9c8d2c3f89b24ea358fc92df03eca5cc
  $tc'Error :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7147351083849973466##
                   773370544593176406##
                   DataTypes.$trModule
                   DataTypes.$tc'Error1) -}
4ec81139e4f89aa5872f4124c2adc80f
  $tc'Error1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Error"#) -}
87d1fb8b49b848466a08b0a18ab8bd9e
  $tcChatRoom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   571445864539551979##
                   13840832230478349769##
                   DataTypes.$trModule
                   DataTypes.$tcChatRoom1) -}
e7b1482feb7fe71e79244ccfcbe24bb3
  $tcChatRoom1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ChatRoom"#) -}
c2f6948d5e7d82dc1ee92b78f7ef66f7
  $tcClient :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3777154156637944294##
                   18296994649183420385##
                   DataTypes.$trModule
                   DataTypes.$tcClient1) -}
d4fb4048572fe9437c734aecb75a1551
  $tcClient1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Client"#) -}
37817ae352d2695c476c7ed7c3bb9d53
  $tcMessage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12539792751858451549##
                   14695472283241904863##
                   DataTypes.$trModule
                   DataTypes.$tcMessage1) -}
eea0f81fa695674d07e2615b2c12db26
  $tcMessage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Message"#) -}
9f285b3a8a21a6584f44eb5310b52b9b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   DataTypes.$trModule2
                   DataTypes.$trModule1) -}
6c87cf0001c05bd7e9fff309b0040abb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DataTypes"#) -}
19942abf28a7538336a3d930784d388d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "chatServer-0.1.0.0-CKiPEewL8xJAxGM0oTBXAz"#) -}
ef5d58e6b3eca6624de1663a406441db
  $w$sgo1 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
8b2055ba7d3aad1b8613f9f7b8265052
  $w$sgo10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
b94eae238269f83d69c994c196711892
  $waddToRoom ::
    DataTypes.Client
    -> GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U,U(U),U,U)><S,U><S,U><S,U>,
     Inline: [0] -}
17ea8a43d7d9aab8a3f699fab6f9acf8
  $whandleMsgTypes ::
    DataTypes.Message
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,1*U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: DataTypes.Message)
                   (ww :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of wild {
                   DataTypes.Chat roomRef1 name msg
                   -> GHC.IO.Handle.Text.hPutStr2
                        ww
                        (GHC.CString.unpackAppendCString#
                           "CHAT: "#
                           (GHC.Base.++
                              @ GHC.Types.Char
                              roomRef1
                              (GHC.CString.unpackAppendCString#
                                 "\n\
                                 \CLIENT_NAME: "#
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    name
                                    (GHC.CString.unpackAppendCString#
                                       "\n\
                                       \MESSAGE: "#
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          msg
                                          DataTypes.disconnectClient3))))))
                        GHC.Types.False
                        w1
                   DataTypes.Error num msg
                   -> GHC.IO.Handle.Text.hPutStr2
                        ww
                        (GHC.CString.unpackAppendCString#
                           "ERROR: "#
                           (GHC.Base.++
                              @ GHC.Types.Char
                              num
                              (GHC.CString.unpackAppendCString#
                                 "\n\
                                 \MEssage: "#
                                 (GHC.Base.++ @ GHC.Types.Char msg DataTypes.disconnectClient3))))
                        GHC.Types.False
                        w1 }) -}
43979c248c80dfce5166323ffe6a607b
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
d1c2c5017bb533513819be23c93026b4
  $wsendMessage ::
    DataTypes.Message
    -> GHC.Prim.Int#
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
    -> DataTypes.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U><L,U><S,U><L,1*U(A,A,A,1*U(A,U))><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: DataTypes.Message)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.TVar#
                             GHC.Prim.RealWorld
                             (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom))
                   (w1 :: DataTypes.Client)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
                           ww1
                           eta)
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case DataTypes.$wpoly_go10 @ DataTypes.ChatRoom ww ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.Prim.atomically#
                        @ ()
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case w1 of wild1 { DataTypes.Client ds ds2 ds3 ds4 ->
                         case ds4 of wild2 { Control.Concurrent.STM.TChan.TChan dt dt1 ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TVarList DataTypes.Message)
                                dt1
                                eta of ds5 { (#,#) ipv2 ipv3 ->
                         case GHC.Prim.newTVar#
                                @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                @ GHC.Prim.RealWorld
                                (Control.Concurrent.STM.TChan.TNil @ DataTypes.Message)
                                ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                         case ipv3 of wild3 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                tvar#
                                (Control.Concurrent.STM.TChan.TCons
                                   @ DataTypes.Message
                                   DataTypes.sendMessage3
                                   ipv5)
                                ipv4 of s2# { DEFAULT ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TVarList DataTypes.Message)
                                dt1
                                (GHC.Conc.Sync.TVar
                                   @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                   ipv5)
                                s2# of s2#1 { DEFAULT ->
                         (# s2#1, GHC.Tuple.() #) } } } } } } })
                        ipv
                   GHC.Base.Just c
                   -> case GHC.Prim.atomically#
                             @ (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case c of wild1 { DataTypes.ChatRoom ds ds2 ds3 ->
                              case ds3 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                              GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)
                                tvar#
                                eta } })
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      letrec {
                        go10 :: GHC.Conc.Sync.STM ()
                                -> Data.Map.Base.Map GHC.Types.Int DataTypes.Client
                                -> GHC.Conc.Sync.STM ()
                          {- Arity: 2, Strictness: <L,U><S,1*U> -}
                        = \ (z' :: GHC.Conc.Sync.STM ())
                            (ds :: Data.Map.Base.Map GHC.Types.Int DataTypes.Client) ->
                          case ds of wild1 {
                            Data.Map.Base.Bin dt kx x l r
                            -> go10
                                 (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case x of wild2 { DataTypes.Client ds3 ds4 ds5 ds6 ->
                                  case ds6 of wild3 { Control.Concurrent.STM.TChan.TChan dt1 dt2 ->
                                  case GHC.Prim.readTVar#
                                         @ GHC.Prim.RealWorld
                                         @ (Control.Concurrent.STM.TChan.TVarList DataTypes.Message)
                                         dt2
                                         eta of ds7 { (#,#) ipv4 ipv5 ->
                                  case GHC.Prim.newTVar#
                                         @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                         @ GHC.Prim.RealWorld
                                         (Control.Concurrent.STM.TChan.TNil @ DataTypes.Message)
                                         ipv4 of ds8 { (#,#) ipv6 ipv7 ->
                                  case ipv5 of wild4 { GHC.Conc.Sync.TVar tvar# ->
                                  case GHC.Prim.writeTVar#
                                         @ GHC.Prim.RealWorld
                                         @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                         tvar#
                                         (Control.Concurrent.STM.TChan.TCons
                                            @ DataTypes.Message
                                            w
                                            ipv7)
                                         ipv6 of s2# { DEFAULT ->
                                  case GHC.Prim.writeTVar#
                                         @ GHC.Prim.RealWorld
                                         @ (Control.Concurrent.STM.TChan.TVarList DataTypes.Message)
                                         dt2
                                         (GHC.Conc.Sync.TVar
                                            @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                            ipv7)
                                         s2# of s2#1 { DEFAULT ->
                                  (go10 z' r) `cast` (GHC.Conc.Sync.N:STM[0] <()>_R)
                                    s2#1 } } } } } } })
                                   `cast`
                                 (Sym (GHC.Conc.Sync.N:STM[0] <()>_R))
                                 l
                            Data.Map.Base.Tip -> z' }
                      } in
                      GHC.Prim.atomically#
                        @ ()
                        (go10
                           DataTypes.sendMessage2 `cast` (Sym (GHC.Conc.Sync.N:STM[0] <()>_R))
                           ipv3)
                          `cast`
                        (GHC.Conc.Sync.N:STM[0] <()>_R)
                        ipv2 } } }) -}
d90a91a8cfa8200cb0947ad2b5aa2e09
  type ChatList =
    GHC.Conc.Sync.TVar
      (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
61c86dadde95afd8c7363199f7700060
  data ChatRoom
    = ChatRoom {roomStr :: GHC.Base.String,
                roomRef :: GHC.Types.Int,
                clients :: GHC.Conc.Sync.TVar
                             (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)}
53855cceaec749daa0275aaa3b871193
  data Client
    = Client {clientName :: GHC.Base.String,
              clientId :: GHC.Types.Int,
              clientHandle :: GHC.IO.Handle.Types.Handle,
              channel :: Control.Concurrent.STM.TChan.TChan DataTypes.Message}
3f710e5df23375843c965117118840bf
  data Message
    = Chat GHC.Base.String GHC.Base.String GHC.Base.String
    | Error GHC.Base.String GHC.Base.String
cb7167ac653840162a72298e072207a7
  addToRoom ::
    DataTypes.Client
    -> GHC.Base.String -> DataTypes.ChatList -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,U(U,U(U),U,U)><S,U><S(S),U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DataTypes.addToRoom1
                  `cast`
                (<DataTypes.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <DataTypes.ChatList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
4b247b348fdc0174336a2dedf54f7ce8
  addToRoom1 ::
    DataTypes.Client
    -> GHC.Base.String
    -> DataTypes.ChatList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U,U(U),U,U)><S,U><S(S),U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: DataTypes.Client)
                   (w1 :: GHC.Base.String)
                   (w2 :: DataTypes.ChatList)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Conc.Sync.TVar ww1 ->
                 DataTypes.$waddToRoom w w1 ww1 w3 }) -}
01417254ede2e61248cfba5c22a83f73
  channel ::
    DataTypes.Client
    -> Control.Concurrent.STM.TChan.TChan DataTypes.Message
  RecSel Left DataTypes.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DataTypes.Client) ->
                 case ds of wild { DataTypes.Client ds1 ds2 ds3 ds4 -> ds4 }) -}
990e4fc95496f086e4db20394c3aaa56
  clientHandle :: DataTypes.Client -> GHC.IO.Handle.Types.Handle
  RecSel Left DataTypes.Client
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DataTypes.Client) ->
                 case ds of wild { DataTypes.Client ds1 ds2 ds3 ds4 -> ds3 }) -}
3d69664b9f97ffa3762ad16671ef562a
  clientId :: DataTypes.Client -> GHC.Types.Int
  RecSel Left DataTypes.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DataTypes.Client) ->
                 case ds of wild { DataTypes.Client ds1 ds2 ds3 ds4 -> ds2 }) -}
191a50f6d6fd7988a7f94b7ab9d150dc
  clientName :: DataTypes.Client -> GHC.Base.String
  RecSel Left DataTypes.Client
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DataTypes.Client) ->
                 case ds of wild { DataTypes.Client ds1 ds2 ds3 ds4 -> ds1 }) -}
ed06fb11459f295504c7b4596bb41484
  clients ::
    DataTypes.ChatRoom
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)
  RecSel Left DataTypes.ChatRoom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DataTypes.ChatRoom) ->
                 case ds of wild { DataTypes.ChatRoom ds1 ds2 ds3 -> ds3 }) -}
0f215152a576a33fc10c7cb7079d2cb2
  disconnectClient ::
    DataTypes.Client -> DataTypes.ChatList -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(A,U(U),U,U(A,U))><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DataTypes.disconnectClient1
                  `cast`
                (<DataTypes.Client>_R
                 ->_R <DataTypes.ChatList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
79d69ee665637e530814e21975481679
  disconnectClient1 ::
    DataTypes.Client
    -> DataTypes.ChatList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(A,U(U),U,U(A,U))><L,U(U)><S,U>,
     Unfolding: (\ (client :: DataTypes.Client)
                   (rooms :: DataTypes.ChatList)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        DataTypes.disconnectClient10
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.atomically#
                        @ (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
                        (GHC.Conc.Sync.readTVar1
                           @ (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
                           rooms)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 let {
                   roomNames :: [GHC.Base.String]
                   = DataTypes.disconnectClient_go10
                       (GHC.Types.[] @ [GHC.Types.Char])
                       ipv3
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.$fShow[]_$s$cshow2 roomNames)
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 letrec {
                   go :: [GHC.Base.String]
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 2, Strictness: <S,1*U><S,U> -}
                   = \ (ds :: [GHC.Base.String])
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ds of wild {
                       [] -> (# eta, GHC.Tuple.() #)
                       : y ys
                       -> case DataTypes.disconnectClient2
                                 (case Data.Hashable.Class.$w$cliftHashWithSalt
                                         @ GHC.Types.Char
                                         Data.Hashable.Class.$fHashableChar_$chashWithSalt
                                         -2578643520546668380#
                                         y of ww { DEFAULT ->
                                  GHC.Types.I# ww })
                                 client
                                 rooms
                                 eta of ds4 { (#,#) ipv6 ipv7 ->
                          go ys ipv6 } }
                 } in
                 go roomNames ipv4 } } }) -}
13d84e207cdc55ad30f57e7f0d80cee1
  disconnectClient10 :: GHC.Base.String
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   DataTypes.disconnectClient11) -}
4d7f5d6d5904e136817a41d33b06341b
  disconnectClient11 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   DataTypes.disconnectClient12
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.shows6
                      (GHC.Types.[] @ GHC.Types.Char))) -}
1b3f7d05ef47725d78f61015591b95fe
  disconnectClient12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "disconnecting client"#) -}
8dc7c305116e7734ff866506a54899b5
  disconnectClient2 ::
    GHC.Types.Int
    -> DataTypes.Client
    -> DataTypes.ChatList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,1*U(U)><L,U(A,U(U),U,1*U(A,U))><L,1*U(U)><S,U>,
     Unfolding: (\ (roomRef1 :: GHC.Types.Int)
                   (client :: DataTypes.Client)
                   (rooms :: DataTypes.ChatList)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        DataTypes.disconnectClient7
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.atomically#
                        @ (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
                        (GHC.Conc.Sync.readTVar1
                           @ (Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom)
                           rooms)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case roomRef1 of ww { GHC.Types.I# ww1 ->
                 case DataTypes.$wpoly_go10 @ DataTypes.ChatRoom ww1 ipv3 of wild {
                   GHC.Base.Nothing
                   -> GHC.Prim.atomically#
                        @ ()
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case client of wild1 { DataTypes.Client ds ds3 ds4 ds5 ->
                         case ds5 of wild2 { Control.Concurrent.STM.TChan.TChan dt dt1 ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TVarList DataTypes.Message)
                                dt1
                                eta of ds6 { (#,#) ipv4 ipv5 ->
                         case GHC.Prim.newTVar#
                                @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                @ GHC.Prim.RealWorld
                                (Control.Concurrent.STM.TChan.TNil @ DataTypes.Message)
                                ipv4 of ds7 { (#,#) ipv6 ipv7 ->
                         case ipv5 of wild3 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                tvar#
                                (Control.Concurrent.STM.TChan.TCons
                                   @ DataTypes.Message
                                   DataTypes.disconnectClient4
                                   ipv7)
                                ipv6 of s2# { DEFAULT ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TVarList DataTypes.Message)
                                dt1
                                (GHC.Conc.Sync.TVar
                                   @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                                   ipv7)
                                s2# of s2#1 { DEFAULT ->
                         (# s2#1, GHC.Tuple.() #) } } } } } } })
                        ipv2
                   GHC.Base.Just c
                   -> case GHC.Prim.atomically#
                             @ (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case c of wild1 { DataTypes.ChatRoom ds ds3 ds4 ->
                              case ds4 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                              GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)
                                tvar#
                                eta } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.atomically#
                             @ ()
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case c of wild1 { DataTypes.ChatRoom ds ds4 ds5 ->
                              case ds5 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                              case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)
                                     tvar#
                                     (case client of wild3 { DataTypes.Client ds6 ds7 ds8 ds9 ->
                                      DataTypes.$sdelete_$sgo10 @ DataTypes.Client ds7 ipv5 })
                                     eta of s2# { DEFAULT ->
                              (# s2#, GHC.Tuple.() #) } } })
                             ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      case client of wild1 { DataTypes.Client ds ds5 ds6 ds7 ->
                      GHC.IO.Handle.Text.hPutStr2
                        ds6
                        (GHC.CString.unpackAppendCString#
                           "LEFT_CHATROOM: "#
                           (case c of wild2 { DataTypes.ChatRoom ds8 ds9 ds10 ->
                            GHC.Base.++
                              @ GHC.Types.Char
                              ds8
                              (GHC.CString.unpackAppendCString#
                                 "\n\
                                 \JOIN_ID: "#
                                 (case ds5 of ww2 { GHC.Types.I# ww3 ->
                                  case GHC.Show.$wshowSignedInt
                                         0#
                                         ww3
                                         (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                  GHC.Base.++
                                    @ GHC.Types.Char
                                    (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                    DataTypes.disconnectClient3 } })) }))
                        GHC.Types.False
                        ipv6 } } } } } } }) -}
63b6631f0a91840be907b365282b965b
  disconnectClient3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \\n"#) -}
67f58fc8619609b63ee40758f532c3fc
  disconnectClient4 :: DataTypes.Message
  {- Strictness: m2,
     Unfolding: (DataTypes.Error
                   DataTypes.disconnectClient6
                   DataTypes.disconnectClient5) -}
f8391d7c09b08de2e3c5a1c364c4e611
  disconnectClient5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Chatroom doesn't exist.\n\
                   \\n"#) -}
7585ea127e7182230e1131cde149900d
  disconnectClient6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "200"#) -}
8c135c1f6802d52f8a20301e28474c5b
  disconnectClient7 :: GHC.Base.String
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   DataTypes.disconnectClient8) -}
7220d2ef415e2d6d5d7c108cf37b815d
  disconnectClient8 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   DataTypes.disconnectClient9
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.shows6
                      (GHC.Types.[] @ GHC.Types.Char))) -}
60a9310c98ec7fb57cb9976dbb312e28
  disconnectClient9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Removing..."#) -}
d95e9201dbb6c174f7738b4aedc4fcbb
  disconnectClient_go10 ::
    [[GHC.Types.Char]]
    -> Data.Map.Base.Map GHC.Types.Int DataTypes.ChatRoom
    -> [[GHC.Types.Char]]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
cb8cc7411a637383152f3225c045d05d
  handleMsgTypes ::
    DataTypes.Message
    -> DataTypes.Client -> DataTypes.ChatList -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,1*U><S(LLSL),1*U(A,A,U,A)><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                DataTypes.handleMsgTypes1
                  `cast`
                (<DataTypes.Message>_R
                 ->_R <DataTypes.Client>_R
                 ->_R <DataTypes.ChatList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
f60075769f6dacf84208c9ce8e4f8d79
  handleMsgTypes1 ::
    DataTypes.Message
    -> DataTypes.Client
    -> DataTypes.ChatList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,1*U><S(LLSL),1*U(A,A,U,A)><L,A><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: DataTypes.Message)
                   (w1 :: DataTypes.Client)
                   (w2 :: DataTypes.ChatList)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { DataTypes.Client ww1 ww2 ww3 ww4 ->
                 DataTypes.$whandleMsgTypes w ww3 w3 }) -}
1c60a1741a3742f38b55dce2362ab36d
  newChatRoom ::
    GHC.Base.String
    -> DataTypes.Client -> GHC.Conc.Sync.STM DataTypes.ChatRoom
  {- Arity: 3, Strictness: <L,U><L,1*U(U,U(U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DataTypes.newChatRoom1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <DataTypes.Client>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <DataTypes.ChatRoom>_R)) -}
7e9e723d39c6307fa9941abeb2840497
  newChatRoom1 ::
    GHC.Base.String
    -> DataTypes.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DataTypes.ChatRoom #)
  {- Arity: 3, Strictness: <L,U><L,1*U(U,U(U),U,U)><S,U>,
     Unfolding: (\ (str :: GHC.Base.String)
                   (client :: DataTypes.Client)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)
                        @ GHC.Prim.RealWorld
                        (case client of wild { DataTypes.Client ds ds1 ds2 ds3 ->
                         case ds1 of ww { GHC.Types.I# ww1 ->
                         DataTypes.$w$sgo1
                           @ DataTypes.Client
                           ww1
                           wild
                           (Data.Map.Base.Tip @ GHC.Types.Int @ DataTypes.Client) } })
                        s of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    DataTypes.ChatRoom
                      str
                      (Data.Hashable.Class.$fHashable[]_$s$chash str)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map GHC.Types.Int DataTypes.Client)
                         ipv1) #) }) -}
2382186aa2dbed5f3e928711d8328832
  newClient ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Types.IO DataTypes.Client
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DataTypes.newClient1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.IO.Handle.Types.Handle>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DataTypes.Client>_R)) -}
0d526767c8f4801c5d226063c5df38c1
  newClient1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DataTypes.Client #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (name :: GHC.Base.String)
                   (ident :: GHC.Types.Int)
                   (hdl :: GHC.IO.Handle.Types.Handle)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                        @ GHC.Prim.RealWorld
                        (Control.Concurrent.STM.TChan.TNil @ DataTypes.Message)
                        eta of ds { (#,#) ipv ipv1 ->
                 let {
                   hole :: GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                   = GHC.Conc.Sync.TVar
                       @ (Control.Concurrent.STM.TChan.TList DataTypes.Message)
                       ipv1
                 } in
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList DataTypes.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList DataTypes.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    DataTypes.Client
                      name
                      ident
                      hdl
                      (Control.Concurrent.STM.TChan.TChan
                         @ DataTypes.Message
                         ipv3
                         ipv5) #) } } }) -}
0aeeb88fe3f5e6fa3c9d2179ee38fabf
  removeClient ::
    GHC.Types.Int
    -> DataTypes.Client -> DataTypes.ChatList -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,1*U(U)><L,U(A,U(U),U,1*U(A,U))><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DataTypes.disconnectClient2
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <DataTypes.Client>_R
                 ->_R <DataTypes.ChatList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9c7ae72998b51a689ac141483a533a9a
  roomRef :: DataTypes.ChatRoom -> GHC.Types.Int
  RecSel Left DataTypes.ChatRoom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DataTypes.ChatRoom) ->
                 case ds of wild { DataTypes.ChatRoom ds1 ds2 ds3 -> ds2 }) -}
dcba4acc53c054eb7cfdde1432c605c9
  roomStr :: DataTypes.ChatRoom -> GHC.Base.String
  RecSel Left DataTypes.ChatRoom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DataTypes.ChatRoom) ->
                 case ds of wild { DataTypes.ChatRoom ds1 ds2 ds3 -> ds1 }) -}
c5ba0f0bf277eb96fd196492c6a8090b
  sendMessage ::
    DataTypes.Message
    -> GHC.Types.Int
    -> DataTypes.ChatList
    -> DataTypes.Client
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><S(S),1*U(U)><L,1*U(A,A,A,1*U(A,U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                DataTypes.sendMessage1
                  `cast`
                (<DataTypes.Message>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <DataTypes.ChatList>_R
                 ->_R <DataTypes.Client>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a8c52c23bbff953d81b5acc487bf7d27
  sendMessage1 ::
    DataTypes.Message
    -> GHC.Types.Int
    -> DataTypes.ChatList
    -> DataTypes.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><S(S),1*U(U)><L,1*U(A,A,A,1*U(A,U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: DataTypes.Message)
                   (w1 :: GHC.Types.Int)
                   (w2 :: DataTypes.ChatList)
                   (w3 :: DataTypes.Client)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { GHC.Conc.Sync.TVar ww3 ->
                 DataTypes.$wsendMessage w ww1 ww3 w3 w4 } }) -}
f30cd2a2b0a6b40b494076183d5242c5
  sendMessage2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, GHC.Tuple.() #)) -}
55949545e97cde65c80a7935273ff229
  sendMessage3 :: DataTypes.Message
  {- Strictness: m2,
     Unfolding: (DataTypes.Error
                   DataTypes.disconnectClient6
                   DataTypes.sendMessage4) -}
71127be5cd3498dda115268613c249b0
  sendMessage4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Chatroom doesn't exist."#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

